// Module dependencies.
var express = require('express')
  , path = require('path')
  , fs = require('fs');

var functionArguments = /^function\s*[^\(]*\(\s*([^\)]*)\)/m
  , functionArgumentsSplit = /\s*,\s*/
  , functionArgumentsModule = /^\$/
  , trimString = /(^\s*|\s*$)/g
  , stripComments = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;

var globalDirname = false;

// Exports.
exports = module.exports = function(dirname) {
	if(dirname && globalDirname === false) {
		globalDirname = dirname;
	}
	
	return function(callback) {
		if(typeof(callback) !== 'function') {
			throw new Error('Callback should be an function');
		}
		
		var app
		  , args
		  , error
		  , stringCallback
		  , stringArguments;
		
		app = express();
		error = null;
		args = [];
		
		stringCallback = callback.toString().replace(stripComments, '');
		stringArguments = stringCallback.match(functionArguments);
		
		stringArguments[1].replace(trimString, '').split(functionArgumentsSplit).slice(1).forEach(function(argument, index) {
			var inject;
			
			if(functionArgumentsModule.test(argument)) {
				argument = camelCaseToDashCase(argument.replace(functionArgumentsModule, ''));
				
				inject = requireModule(path.resolve(globalDirname, 'node_modules', argument));
			} else {
				var absolutePath = path.resolve(dirname, argument);
				
				try {
					inject = require(absolutePath);
				} catch(e) {
					inject = {};
					
					if(fs.existsSync(absolutePath)) {
						var stat;
						
						stat = fs.statSync(absolutePath);
						
						if(stat.isDirectory()) {
							var files;
							
							files = fs.readdirSync(absolutePath);
							
							files.forEach(function(file, index) {
								inject.__defineGetter__(file, function() {
									var result = require(path.resolve(absolutePath, file));
									
									delete inject[file];
									
									inject[file] = result;
									
									return result;
								});
							});
						}
					}
				}
			}
			
			args.push(inject);
		});
		
		args.unshift(error);
		
		callback.apply(app, args);
		
		return app;
	};
};

var requireModule = function(dirname) {
	var pack = require(path.resolve(dirname, 'package.json'));
	
	if('main' in pack) {
		dirname = path.resolve(dirname, pack.main);
	}
	
	return require(dirname);
};

var camelCaseToDashCaseCallback = function($1) {
	return "-" + $1.toLowerCase();
};

var camelCaseToDashCase = function(str) {
	return str.replace(/([A-Z])/g, camelCaseToDashCaseCallback);
};